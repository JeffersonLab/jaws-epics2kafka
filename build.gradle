import com.github.jk1.license.filter.*

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'distribution'
    id 'com.github.jk1.dependency-license-report' version '2.0'
}

description "JLab Kafka Connect transform from epics2kafka to JAWS"
group 'org.jlab'
version '4.6.0'

tasks.withType(JavaCompile) {
    options.release = 11
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

configurations {
    testImplementation.extendsFrom(compileOnly)
}

dependencies {
    compileOnly 'org.apache.kafka:connect-transforms:3.5.0'
    implementation 'org.apache.avro:avro:1.11.2',
                   'io.confluent:kafka-connect-avro-data:7.4.0',
                   'org.jlab:jaws-libj:4.6.0'
    testImplementation 'junit:junit:4.13.2'
}

build {
    dependsOn(installDist)
}

installDist.dependsOn(generateLicenseReport)
distTar.dependsOn(generateLicenseReport)
distZip.dependsOn(generateLicenseReport)

distributions {
    main {
        contents {
            from jar

            /*We only include jars not already provided in Kafka/libs dir (or should be in kafka/libs)*/
            /*Example, we exclude log4j, slf4j, jackson, kafka, avro, confluent */
            from (project.configurations.runtimeClasspath).with {
                include('jaws-epics2kafka*')
                include('kafka-common*')
                include('jaws-libj*')
            }
        }
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "slominskir"
            name "Ryan Slominski"
            email "ryans@jlab.org"
        }
    }

    scm {
        url "https://github.com/JeffersonLab/jaws-epics2kafka"
    }
}

publishing {
    publications {
        ProjectPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId project.name
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.children().last() + pomConfig
            }
        }
    }
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

jar {
    from ('./') {
        include 'LICENSE'
        into 'META-INF'
    }
}

licenseReport {
    filters = [new LicenseBundleNormalizer()]
    excludeOwnGroup = false
    allowedLicensesFile = new File("$projectDir/gradle/allowed-licenses.json")
}